<?php


function company_admin_menu()
{

    $items['company/%'] = array(
        'title' => 'Компания ' . 1,
        'page callback' => 'company_page',
        'page arguments' => array(1, 'main-page'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
        'menu_name' => 'company-menu',
    );

    $items['company/%/products'] = array(
        'title' => 'Продукты компании '  . 1,
        'page callback' => 'company_page',
        'page arguments' => array(1, 'products-page'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
        'menu_name' => 'company-menu',
    );
    $items['company/%/news'] = array(
        'title' => 'Новости компании ' . 1,
        'page callback' => 'company_page',
        'page arguments' => array(1, 'news-page'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
        'menu_name' => 'company-menu',
    );
    $items['company/%/gallery'] = array(
        'title' => 'Фотогалерея компании ' . 1,
        'page callback' => 'company_page',
        'page arguments' => array(1, 'gallery-page'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
        'menu_name' => 'company-menu',
    );

    $items['company/%/reviews'] = array(
        'title' => 'Отзывы компании ' . 1,
        'page callback' => 'company_page',
        'page arguments' => array(1, 'review-page'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
        'menu_name' => 'company-menu',
    );

    return $items;
}

function show_link()
{
    $company = company_admin_get_company();
    return '<a href="/node/' . $company->nid . '/edit" > Редактировать компанию </a>';
}

function example_user_has_role($user, $roles = array())
{
    $current_user = user_load_by_name($user);
    if ($current_user && $roles) {
        foreach ($roles as $role) {
            if (in_array($role, $current_user->roles)) {
                return TRUE;
            }
        }
    }
    return false;
}

function company_page($node_title, $type)
{
    $node = get_node_by_alias($node_title);
    $template_name = "";
    switch ($type) {
        case 'main-page':
            $template_name = "main";
            break;
        case 'products-page':
            $template_name = "products";
            break;
        case 'news-page':
            $template_name = "news";
            break;
        case 'gallery-page':
            $template_name = "gallery";
            break;
        case 'review-page':
            $template_name = "review";
            break;
    }
    return theme($template_name . '_template', array('node' => $node)); // call a theme or you have no pass any argument in theme to change a 'nodes'=> NULL or 'pager'=>NULL
}


function company_admin_theme()
{
    return array(
        'main_template' => array(
            'template' => 'main-page',//this is file name of template file
            'variables' => array('nodes' => NULL, 'pager' => NULL), //this is pass avarible of templates file
            'path' => drupal_get_path('module', 'company_admin') . '/template' // set a path of file
        ),
        'products_template' => array(
            'template' => 'products-page',//this is file name of template file
            'variables' => array('nodes' => NULL, 'pager' => NULL), //this is pass avarible of templates file
            'path' => drupal_get_path('module', 'company_admin') . '/template' // set a path of file
        ),
        'news_template' => array(
            'template' => 'news-page',//this is file name of template file
            'variables' => array('nodes' => NULL, 'pager' => NULL), //this is pass avarible of templates file
            'path' => drupal_get_path('module', 'company_admin') . '/template' // set a path of file
        ),
        'gallery_template' => array(
            'template' => 'gallery-page',//this is file name of template file
            'variables' => array('nodes' => NULL, 'pager' => NULL), //this is pass avarible of templates file
            'path' => drupal_get_path('module', 'company_admin') . '/template' // set a path of file
        ),
        'review_template' => array(
            'template' => 'review-page',//this is file name of template file
            'variables' => array('nodes' => NULL, 'pager' => NULL), //this is pass avarible of templates file
            'path' => drupal_get_path('module', 'company_admin') . '/template' // set a path of file
        ),
    );
}

function company_admin_permission()         /// set new role for module permision
{
    return array(
        'access company module' => array(
            'title' => t('Access my test module'),
            'description' => t('Доступ к первой кастомной странице моего модуля')
        ));
}


function company_admin_node_validate($node, $form, &$form_state)
{

    global $user;
    $count = db_select('node', 'n')
        ->condition('n.uid', $user->uid)
        ->countQuery()
        ->execute()
        ->fetchField();

    if ($count > 0 && !$node->nid && $user->uid != 1 && $node->type == "company") {
        form_set_error('time', t('Вы не можете создать более, чем 1 компанию'));
    }
    if ($node->type == 'goods') {
        change_status_last();
    }
}

function company_admin_get_company()
{
    global $user;
    $nodes = db_select('node', 'n')
        ->fields('n')
        ->condition('n.type', 'company')
        ->condition('n.uid', $user->uid)
        ->execute()
        ->fetchAll();

    return $nodes[0];
}

function company_admin_node_presave($node)
{
    if ($node->type == 'goods') {
        $company = company_admin_get_company();
        $node->field_company['und'][0]['target_id'] = $company->nid;
        $alias = explode('/', drupal_get_path_alias('node/' . $company->nid));
        $node->field_alias['und'][0]['value'] = $alias[1];

       // change_status_last();

    }

    if ($node->type == 'company_news') {
        $company = company_admin_get_company();
        $node->field_company['und'][0]['target_id'] = $company->nid;
    }
    if ($node->type == 'photogallery') {
        $company = company_admin_get_company();
        $node->field_company['und'][0]['target_id'] = $company->nid;
    }
/*
        if ($node->type == "company"){
            $query = new EntityFieldQuery();
            $query->entityCondition('entity_type', 'node');
            $query->propertyCondition('type', 'company'); // фильтр по типу ноды
            $query->propertyCondition('status', 1); // фильтр по типу ноды
            $result = $query->execute();

           foreach (array_keys($result['node']) as $nid) {
                $node_local = node_load($nid, NULL, TRUE);
                 $node_local->field_leader['und'][0]['value'] ="";
               // node_save($node_local);
            }
        }*/
}

function get_node_by_alias($node_title)
{
    $alias = "company/" . $node_title . '/about';
    $path = drupal_lookup_path("source", $alias);
    $node = menu_get_object("node", 1, $path);
    return $node;

}


function get_company_categories($term_id = null)
{


    $terms = db_query("
  SELECT td.tid, td.name, (
    SELECT COUNT(*) FROM {taxonomy_index} ti
    LEFT JOIN {node} n ON ti.nid = n.nid
    WHERE ti.tid = td.tid AND n.status = 1
  ) node_count FROM {taxonomy_term_data} td , {taxonomy_term_hierarchy } th
  WHERE vid = :vid AND td.tid = th.tid AND th.parent = 0
  ORDER BY weight
", array(':vid' => 4));

    $query = db_select('node', 'n')
        ->condition('n.type', 'company')
        ->condition('n.status', 1);
    $query->addExpression('COUNT(*)');
    $node_count = $query->execute()->fetchField();

    $items = array();
    (!$term_id) ? $active = "active":  $active = "";

    $items[] = '<div class="' . $active . '">' . l('Все' . " (" . $node_count . ")", 'category/company/') . '</div>';;
    foreach ($terms as $term) {
        ($term->tid == $term_id) ? $active = "active" : $active = '';
        $path = str_replace(' ', '-', transliteration_get($term->name));
        $items[] = '<div class="' . $active . '">' . l($term->name . " " . "(" . $term->node_count . ")", 'category/company/' . strtolower($path)) . '</div>';
    }

    return theme('item_list', array('items' => $items));
}


function get_tid_by_title($argument)
{
    $alias = "category/" . $argument;
    $res = db_query("SELECT source , alias  FROM  {url_alias} ua WHERE ua.alias = :alias", array(':alias' => $alias));
    $id = "";
    foreach ($res as $term) {
        $path = explode('/', $term->source);
        $id = $path[2];
    }
    return $id;

}

function change_status_last(){
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node');
    $query->propertyCondition('type', 'goods'); // фильтр по типу ноды
    $query->propertyCondition('status', 1); // фильтр по типу ноды
    $query->fieldCondition('field_last_good', 'value', "1", '=');
    $result = $query->execute();
    if (isset($result['node'])) {
        foreach (array_keys($result['node']) as $node_nid) {

            $node_local = node_load($node_nid, NULL, TRUE);
            $node_local->field_last_good['und'][0]['value'] = 0;
            node_save($node_local);
        }
    }
}




///соболезную тем кто будет потом поддерживать этот проект